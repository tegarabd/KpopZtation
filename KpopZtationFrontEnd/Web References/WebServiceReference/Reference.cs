//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KpopZtationFrontEnd.WebServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArtistByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteArtistOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAlbumByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAlbumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCartsByCustomerIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertAlbumToCustomerCartOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::KpopZtationFrontEnd.Properties.Settings.Default.KpopZtationFrontEnd_WebService_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event GetCustomerByIdCompletedEventHandler GetCustomerByIdCompleted;
        
        /// <remarks/>
        public event GetArtistsCompletedEventHandler GetArtistsCompleted;
        
        /// <remarks/>
        public event GetArtistByIdCompletedEventHandler GetArtistByIdCompleted;
        
        /// <remarks/>
        public event InsertArtistCompletedEventHandler InsertArtistCompleted;
        
        /// <remarks/>
        public event UpdateArtistCompletedEventHandler UpdateArtistCompleted;
        
        /// <remarks/>
        public event DeleteArtistCompletedEventHandler DeleteArtistCompleted;
        
        /// <remarks/>
        public event InsertAlbumCompletedEventHandler InsertAlbumCompleted;
        
        /// <remarks/>
        public event GetAlbumByIdCompletedEventHandler GetAlbumByIdCompleted;
        
        /// <remarks/>
        public event UpdateAlbumCompletedEventHandler UpdateAlbumCompleted;
        
        /// <remarks/>
        public event DeleteAlbumCompletedEventHandler DeleteAlbumCompleted;
        
        /// <remarks/>
        public event GetCartsByCustomerIdCompletedEventHandler GetCartsByCustomerIdCompleted;
        
        /// <remarks/>
        public event InsertAlbumToCustomerCartCompletedEventHandler InsertAlbumToCustomerCartCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Register(string name, string email, string gender, string address, string password) {
            object[] results = this.Invoke("Register", new object[] {
                        name,
                        email,
                        gender,
                        address,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(string name, string email, string gender, string address, string password) {
            this.RegisterAsync(name, email, gender, address, password, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(string name, string email, string gender, string address, string password, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        name,
                        email,
                        gender,
                        address,
                        password}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCustomerById(int id) {
            object[] results = this.Invoke("GetCustomerById", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByIdAsync(int id) {
            this.GetCustomerByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetCustomerByIdAsync(int id, object userState) {
            if ((this.GetCustomerByIdOperationCompleted == null)) {
                this.GetCustomerByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByIdOperationCompleted);
            }
            this.InvokeAsync("GetCustomerById", new object[] {
                        id}, this.GetCustomerByIdOperationCompleted, userState);
        }
        
        private void OnGetCustomerByIdOperationCompleted(object arg) {
            if ((this.GetCustomerByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByIdCompleted(this, new GetCustomerByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArtists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArtists() {
            object[] results = this.Invoke("GetArtists", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistsAsync() {
            this.GetArtistsAsync(null);
        }
        
        /// <remarks/>
        public void GetArtistsAsync(object userState) {
            if ((this.GetArtistsOperationCompleted == null)) {
                this.GetArtistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistsOperationCompleted);
            }
            this.InvokeAsync("GetArtists", new object[0], this.GetArtistsOperationCompleted, userState);
        }
        
        private void OnGetArtistsOperationCompleted(object arg) {
            if ((this.GetArtistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistsCompleted(this, new GetArtistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArtistById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetArtistById(int id) {
            object[] results = this.Invoke("GetArtistById", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetArtistByIdAsync(int id) {
            this.GetArtistByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetArtistByIdAsync(int id, object userState) {
            if ((this.GetArtistByIdOperationCompleted == null)) {
                this.GetArtistByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArtistByIdOperationCompleted);
            }
            this.InvokeAsync("GetArtistById", new object[] {
                        id}, this.GetArtistByIdOperationCompleted, userState);
        }
        
        private void OnGetArtistByIdOperationCompleted(object arg) {
            if ((this.GetArtistByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArtistByIdCompleted(this, new GetArtistByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertArtist(string name, string image) {
            object[] results = this.Invoke("InsertArtist", new object[] {
                        name,
                        image});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertArtistAsync(string name, string image) {
            this.InsertArtistAsync(name, image, null);
        }
        
        /// <remarks/>
        public void InsertArtistAsync(string name, string image, object userState) {
            if ((this.InsertArtistOperationCompleted == null)) {
                this.InsertArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertArtistOperationCompleted);
            }
            this.InvokeAsync("InsertArtist", new object[] {
                        name,
                        image}, this.InsertArtistOperationCompleted, userState);
        }
        
        private void OnInsertArtistOperationCompleted(object arg) {
            if ((this.InsertArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertArtistCompleted(this, new InsertArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateArtist(int id, string name, string image) {
            object[] results = this.Invoke("UpdateArtist", new object[] {
                        id,
                        name,
                        image});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(int id, string name, string image) {
            this.UpdateArtistAsync(id, name, image, null);
        }
        
        /// <remarks/>
        public void UpdateArtistAsync(int id, string name, string image, object userState) {
            if ((this.UpdateArtistOperationCompleted == null)) {
                this.UpdateArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArtistOperationCompleted);
            }
            this.InvokeAsync("UpdateArtist", new object[] {
                        id,
                        name,
                        image}, this.UpdateArtistOperationCompleted, userState);
        }
        
        private void OnUpdateArtistOperationCompleted(object arg) {
            if ((this.UpdateArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArtistCompleted(this, new UpdateArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteArtist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteArtist(int id) {
            object[] results = this.Invoke("DeleteArtist", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteArtistAsync(int id) {
            this.DeleteArtistAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteArtistAsync(int id, object userState) {
            if ((this.DeleteArtistOperationCompleted == null)) {
                this.DeleteArtistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteArtistOperationCompleted);
            }
            this.InvokeAsync("DeleteArtist", new object[] {
                        id}, this.DeleteArtistOperationCompleted, userState);
        }
        
        private void OnDeleteArtistOperationCompleted(object arg) {
            if ((this.DeleteArtistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteArtistCompleted(this, new DeleteArtistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAlbum(int artistId, string name, string image, string description, int price, int stock) {
            object[] results = this.Invoke("InsertAlbum", new object[] {
                        artistId,
                        name,
                        image,
                        description,
                        price,
                        stock});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAlbumAsync(int artistId, string name, string image, string description, int price, int stock) {
            this.InsertAlbumAsync(artistId, name, image, description, price, stock, null);
        }
        
        /// <remarks/>
        public void InsertAlbumAsync(int artistId, string name, string image, string description, int price, int stock, object userState) {
            if ((this.InsertAlbumOperationCompleted == null)) {
                this.InsertAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAlbumOperationCompleted);
            }
            this.InvokeAsync("InsertAlbum", new object[] {
                        artistId,
                        name,
                        image,
                        description,
                        price,
                        stock}, this.InsertAlbumOperationCompleted, userState);
        }
        
        private void OnInsertAlbumOperationCompleted(object arg) {
            if ((this.InsertAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAlbumCompleted(this, new InsertAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAlbumById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAlbumById(int id) {
            object[] results = this.Invoke("GetAlbumById", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAlbumByIdAsync(int id) {
            this.GetAlbumByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void GetAlbumByIdAsync(int id, object userState) {
            if ((this.GetAlbumByIdOperationCompleted == null)) {
                this.GetAlbumByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAlbumByIdOperationCompleted);
            }
            this.InvokeAsync("GetAlbumById", new object[] {
                        id}, this.GetAlbumByIdOperationCompleted, userState);
        }
        
        private void OnGetAlbumByIdOperationCompleted(object arg) {
            if ((this.GetAlbumByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAlbumByIdCompleted(this, new GetAlbumByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAlbum(int id, string name, string image, string description, int price, int stock) {
            object[] results = this.Invoke("UpdateAlbum", new object[] {
                        id,
                        name,
                        image,
                        description,
                        price,
                        stock});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAlbumAsync(int id, string name, string image, string description, int price, int stock) {
            this.UpdateAlbumAsync(id, name, image, description, price, stock, null);
        }
        
        /// <remarks/>
        public void UpdateAlbumAsync(int id, string name, string image, string description, int price, int stock, object userState) {
            if ((this.UpdateAlbumOperationCompleted == null)) {
                this.UpdateAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAlbumOperationCompleted);
            }
            this.InvokeAsync("UpdateAlbum", new object[] {
                        id,
                        name,
                        image,
                        description,
                        price,
                        stock}, this.UpdateAlbumOperationCompleted, userState);
        }
        
        private void OnUpdateAlbumOperationCompleted(object arg) {
            if ((this.UpdateAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAlbumCompleted(this, new UpdateAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAlbum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteAlbum(int id) {
            object[] results = this.Invoke("DeleteAlbum", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAlbumAsync(int id) {
            this.DeleteAlbumAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteAlbumAsync(int id, object userState) {
            if ((this.DeleteAlbumOperationCompleted == null)) {
                this.DeleteAlbumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAlbumOperationCompleted);
            }
            this.InvokeAsync("DeleteAlbum", new object[] {
                        id}, this.DeleteAlbumOperationCompleted, userState);
        }
        
        private void OnDeleteAlbumOperationCompleted(object arg) {
            if ((this.DeleteAlbumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAlbumCompleted(this, new DeleteAlbumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCartsByCustomerId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCartsByCustomerId(int customerId) {
            object[] results = this.Invoke("GetCartsByCustomerId", new object[] {
                        customerId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCartsByCustomerIdAsync(int customerId) {
            this.GetCartsByCustomerIdAsync(customerId, null);
        }
        
        /// <remarks/>
        public void GetCartsByCustomerIdAsync(int customerId, object userState) {
            if ((this.GetCartsByCustomerIdOperationCompleted == null)) {
                this.GetCartsByCustomerIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCartsByCustomerIdOperationCompleted);
            }
            this.InvokeAsync("GetCartsByCustomerId", new object[] {
                        customerId}, this.GetCartsByCustomerIdOperationCompleted, userState);
        }
        
        private void OnGetCartsByCustomerIdOperationCompleted(object arg) {
            if ((this.GetCartsByCustomerIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCartsByCustomerIdCompleted(this, new GetCartsByCustomerIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertAlbumToCustomerCart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsertAlbumToCustomerCart(int customerdId, int albumId, int quantity) {
            object[] results = this.Invoke("InsertAlbumToCustomerCart", new object[] {
                        customerdId,
                        albumId,
                        quantity});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertAlbumToCustomerCartAsync(int customerdId, int albumId, int quantity) {
            this.InsertAlbumToCustomerCartAsync(customerdId, albumId, quantity, null);
        }
        
        /// <remarks/>
        public void InsertAlbumToCustomerCartAsync(int customerdId, int albumId, int quantity, object userState) {
            if ((this.InsertAlbumToCustomerCartOperationCompleted == null)) {
                this.InsertAlbumToCustomerCartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertAlbumToCustomerCartOperationCompleted);
            }
            this.InvokeAsync("InsertAlbumToCustomerCart", new object[] {
                        customerdId,
                        albumId,
                        quantity}, this.InsertAlbumToCustomerCartOperationCompleted, userState);
        }
        
        private void OnInsertAlbumToCustomerCartOperationCompleted(object arg) {
            if ((this.InsertAlbumToCustomerCartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertAlbumToCustomerCartCompleted(this, new InsertAlbumToCustomerCartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCustomerByIdCompletedEventHandler(object sender, GetCustomerByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetArtistsCompletedEventHandler(object sender, GetArtistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetArtistByIdCompletedEventHandler(object sender, GetArtistByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArtistByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArtistByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertArtistCompletedEventHandler(object sender, InsertArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateArtistCompletedEventHandler(object sender, UpdateArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteArtistCompletedEventHandler(object sender, DeleteArtistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteArtistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteArtistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertAlbumCompletedEventHandler(object sender, InsertAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetAlbumByIdCompletedEventHandler(object sender, GetAlbumByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAlbumByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAlbumByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpdateAlbumCompletedEventHandler(object sender, UpdateAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void DeleteAlbumCompletedEventHandler(object sender, DeleteAlbumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAlbumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAlbumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetCartsByCustomerIdCompletedEventHandler(object sender, GetCartsByCustomerIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCartsByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCartsByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertAlbumToCustomerCartCompletedEventHandler(object sender, InsertAlbumToCustomerCartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertAlbumToCustomerCartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertAlbumToCustomerCartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591